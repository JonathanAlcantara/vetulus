syntax = "proto3";


package VetulusService;


message ProtoFile {
    bytes data = 1;
    MetaData meta = 2;
}

message MetaData {
    string name = 1;
}

message Ack {
    bool done = 1;
}


message ADTService {
    string name = 1;
    string description = 2;
    string adt = 3;
    string address = 4;
    int32 port = 5;
    string log_path = 6;
}


message ListOptions {
}

message ListResponse {
    repeated ADTService services = 1;
}


message ADTImpl {
    string name = 1;
}

message ListADTsOptions {
}


message ListADTsResponse {
    repeated ADTImpl adts = 1;
}


/*
 * Vetulus gRPC server interface definition
 */
service Manager {

    /*
     * Adds a proto file onto Vetulus server
     */
    rpc Add (ProtoFile) returns (Ack) {}


    /*
     * Removes a proto file from Vetulus server
     */
    rpc Remove (MetaData) returns (Ack) {}


    /*
     * Starts a new service. This method will fork and start the new service
     */
    rpc Start (ADTService) returns (Ack) {}


    /*
     * Stops a running service. Kills its process.
     */
    rpc Stop (ADTService) returns (Ack) {}


    /*
     * Lists all running services
     */
     rpc ListServices (ListOptions) returns (ListResponse) {}


     /*
      * Lists Abstract Data Type available implementation
      */
      rpc ListADTs (ListADTsOptions) returns (ListADTsResponse) {}
}
